name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [ pull_request, push, workflow_dispatch ]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,https://nuget.pkg.github.com/jiayuehua/index.json,readwrite'

    strategy:
      matrix:
        
        vstriplet: ['linux-debug']
                

        include:
        
          - os: 'ubuntu-latest'
            triplet: 'x64-linux'
            # To run `nuget.exe` on non-Windows platforms, we must use `mono`.
            mono: 'mono'
            vstriplet: 'linux-debug'
            
      
      
    #The type of runner that the job will run on
    #runs-on: ubuntu-latest
    runs-on: ${{ matrix.os }}


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
            submodules: true
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ matrix.os }}-${{ matrix.vstriplet }}
          max-size: 1000M

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - uses: lukka/get-cmake@latest

      - name: Restore from cache and setup vcpkg executable and data files.
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgJsonGlob: 'vcpkg.json'


     # This step assumes `vcpkg` has been bootstrapped (run `./vcpkg/bootstrap-vcpkg`)
      - name: 'Setup NuGet Credentials'
        shell: 'bash'
        # Replace <OWNER> with your organization name
        run: >
          ${{ matrix.mono }} `$VCPKG_ROOT/vcpkg fetch nuget | tail -n 1`
          sources add
          -source "https://nuget.pkg.github.com/jiayuehua/index.json"
          -storepasswordincleartext
          -name "GitHub"
          -username "jiayeuhua"
          -password "${{ secrets.GITHUB_TOKEN }}"


      - name: 'Run CMake with Ninja'
        uses: lukka/run-cmake@v10
        with:
          configurePreset: 'ninja-multi-vcpkg'
          buildPreset: 'ninja-vcpkg-debug'
          testPreset: 'test-debug'
